#################################################################
#
# a plone 'archetype' that describes a cookbook recipe.
#
#################################################################

# from Products.EffRecipes.config import ARTICLE_GROUPS

from Products.Archetypes.public import BaseSchema, Schema
from Products.Archetypes.public import StringField, TextField
from Products.Archetypes.public import SelectionWidget, TextAreaWidget
from Products.Archetypes.public import RichWidget

from Products.Archetypes.public import BaseContent, registerType
from Products.Archetypes.Marshall import PrimaryFieldMarshaller
from Products.CMFCore import CMFCorePermissions

from config import PROJECTNAME



### Add validator functions for all fields!


schema = BaseSchema + Schema((
  
  # only user 'eff' should be able to edit this field
  IntegerField("effrating",
               widget=IntegerWidget("Eff's rating"),
               ),

  ImageField("picture",
             widget=ImageWidget("Picture"),
             display_threshold=100000,
             ),

  # want to create a LinesField here ("Categories") with a
  # SelectionWidget, but the catch is that the selectable values need
  # to be dynamically generated by querying another set of document
  # types.  The SelectionWidget needs to have 'multiValued=True' also,
  # since a recipe can belong to multiple food categories.  (Hopefully
  # a mulitValued SelectionWidget will return a python list of
  # categories for a LineField, right?)

  # no idea how to attach "3 pounds of bananas" to this archetype,
  # much less even how to allow users to repeatedly attach 'keywords'
  # via the UI.  discuss with hazmat.

  TextField('instructions',
            searchable=1,
            required=1,
            primary=1,   # this field will be returned by DAV and FTP
            default_output_type='text/html',
            allowable_content_types=('text/plain',
                                     'text/structured',
                                     'text/restructured',
                                     'text/html',
                                     'application/msword'),
            widget=RichWidget(label='Instructions'),
            ),

  TextField('commentary',
            searchable=1,
            default_output_type='text/html',
            allowable_content_types=('text/plain',
                                     'text/structured',
                                     'text/restructured',
                                     'text/html',
                                     'application/msword'),
            widget=RichWidget(label='Commentary'),
            ),

  TextField('servinghistory',
            searchable=1,
            default_output_type='text/html',
            allowable_content_types=('text/plain',
                                     'text/structured',
                                     'text/restructured',
                                     'text/html',
                                     'application/msword'),
            widget=RichWidget(label='Serving History'),
            ),

  StringField('attribution',
              searchable=1,
              widget=TextAreaWidget("Attribution"),
              ),
    ),
                              marshall=PrimaryFieldMarshaller(),
                              )

class Recipe(BaseContent):
    """A type that represents a recipe from a cookbook.
    """

    schema = schema

    actions = ({
        'id': 'view',

        'name': 'View',

        # go use this nice template-skin over here, to display:
        'action': 'string:${object_url}/recipe_view',

        'permissions': (CMFCorePermissions.View,)
        },)

registerType(Recipe, PROJECTNAME)
